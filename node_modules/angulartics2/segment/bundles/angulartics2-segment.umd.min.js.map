{
  "version": 3,
  "file": "angulartics2-segment.umd.min.js",
  "sources": [
    "ng://angulartics2/segment/src/lib/providers/segment/segment.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var analytics: SegmentAnalytics.AnalyticsJS;\n\n@Injectable()\nexport class Angulartics2Segment {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setAlias\n      .subscribe((x) => this.setAlias(x));\n  }\n\n  /**\n   * https://segment.com/docs/libraries/analytics.js/#page\n   *\n   * analytics.page([category], [name], [properties], [options], [callback]);\n   */\n  pageTrack(path: string) {\n    // TODO : Support optional parameters where the parameter order and type changes their meaning\n    try {\n      analytics.page(path);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * https://segment.com/docs/libraries/analytics.js/#track\n   *\n   * analytics.track(event, [properties], [options], [callback]);\n   */\n  eventTrack(action: string, properties: any) {\n    try {\n      analytics.track(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * https://segment.com/docs/libraries/analytics.js/#identify\n   *\n   * analytics.identify([userId], [traits], [options], [callback]);\n   */\n  setUserProperties(properties: any) {\n    try {\n      if (properties.userId) {\n        analytics.identify(properties.userId, properties);\n      } else {\n        analytics.identify(properties);\n      }\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * https://segment.com/docs/libraries/analytics.js/#alias\n   *\n   * analytics.alias(userId, previousId, options, callback);\n   */\n  setAlias(alias: any) {\n    try {\n      analytics.alias(alias);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"
  ],
  "names": [
    "Angulartics2Segment",
    "angulartics2",
    "_this",
    "this",
    "pageTrack",
    "pipe",
    "filterDeveloperMode",
    "subscribe",
    "x",
    "path",
    "eventTrack",
    "action",
    "properties",
    "setUserProperties",
    "setUserPropertiesOnce",
    "setAlias",
    "analytics",
    "page",
    "e",
    "ReferenceError",
    "prototype",
    "track",
    "userId",
    "identify",
    "alias"
  ],
  "mappings": "+WAAA,IAOAA,EAAA,WAEE,SAAAA,EAAFC,GACY,IAAZC,EAAAC,KAEIA,KAAKF,aAATA,EACAE,KAAOF,aAAPG,UACOC,KAAPF,KAAiBF,aAAjBK,uBACSC,UAAT,SAAAC,GAAA,OAAAN,EAAAE,UAAAI,EAAAC,QACAN,KAAOF,aAAPS,WACOL,KAAPF,KAAiBF,aAAjBK,uBACSC,UAAT,SAAAC,GAAA,OAAAN,EAAAQ,WAAAF,EAAAG,OAAAH,EAAAI,cACAT,KAAOF,aAAPY,kBACSN,UAAT,SAAAC,GAAA,OAAAN,EAAAW,kBAAAL,KACAL,KAAOF,aAAPa,sBACSP,UAAT,SAAAC,GAAA,OAAAN,EAAAW,kBAAAL,KACAL,KAAOF,aAAPc,SACAR,UAAA,SAAAC,GAAA,OAAAN,EAAAa,SAAAP,8CAUA,IACAQ,UAAAC,KAAAR,GACA,MAASS,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAUAlB,EAAAoB,UAAAV,WAAA,SAAAC,EAAAC,GACA,IACAI,UAAAK,MAAAV,EAAAC,GACA,MAASM,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAUAlB,EAAAoB,UAAAP,kBAAA,SAAAD,GACA,IACQA,EAARU,OACAN,UAAAO,SAAAX,EAAAU,OAAAV,GAEAI,UAAAO,SAAAX,GAEA,MAASM,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAUAlB,EAAAoB,UAAAL,SAAA,SAAAS,GACA,IACAR,UAAAQ,MAAAA,GACA,MAASN,GACT,KAAAA,aAAAC,gBACA,MAAAD,MAhFA"
}
