{
  "version": 3,
  "file": "angulartics2-adobeanalytics.js",
  "sources": [
    "ng://angulartics2/adobeanalytics/src/lib/providers/adobeanalytics/adobeanalytics.ts"
  ],
  "sourcesContent": [
    "import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare const s: any;\n\n@Injectable()\nexport class Angulartics2AdobeAnalytics {\n\n  constructor(\n    private angulartics2: Angulartics2,\n    private location: Location,\n  ) {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string) {\n    if (typeof s !== 'undefined' && s) {\n      s.clearVars();\n      s.t({pageName: path});\n    }\n  }\n\n  /**\n   * Track Event in Adobe Analytics\n   *\n   * @param action associated with the event\n   * @param properties action detials\n   *\n   * @link https://marketing.adobe.com/resources/help/en_US/sc/implement/js_implementation.html\n   */\n  eventTrack(action: string, properties: any) {\n    // TODO: make interface\n    // @property {string} properties.category\n    // @property {string} properties.label\n    // @property {number} properties.value\n    // @property {boolean} properties.noninteraction\n    if (!properties) {\n      properties = properties || {};\n    }\n\n    if (typeof s !== 'undefined' && s) {\n      if (typeof properties === 'object') {\n        this.setUserProperties(properties);\n      }\n      if (action) {\n        // if linkName property is passed, use that; otherwise, the action is the linkName\n        const linkName = (properties['linkName']) ? properties['linkName'] : action;\n        // note that 'this' should refer the link element, but we can't get that in this function. example:\n        // <a href=\"http://anothersite.com\" onclick=\"s.tl(this,'e','AnotherSite',null)\">\n        // if disableDelay property is passed, use that to turn off/on the 500ms delay; otherwise, it uses this\n        const disableDelay = !!properties['disableDelay'] ? true : this;\n        // if action property is passed, use that; otherwise, the action remains unchanged\n        if (properties['action']) {\n          action = properties['action'];\n        }\n        this.setPageName();\n\n        if (action.toUpperCase() === 'DOWNLOAD') {\n          s.tl(disableDelay, 'd', linkName);\n        } else if (action.toUpperCase() === 'EXIT') {\n          s.tl(disableDelay, 'e', linkName);\n        } else {\n          s.tl(disableDelay, 'o', linkName);\n        }\n      }\n    }\n  }\n\n  private setPageName() {\n    const path = this.location.path(true);\n    const hashNdx = path.indexOf('#');\n    if (hashNdx > 0 && hashNdx < path.length) {\n      s.pageName = path.substring(hashNdx + 1);\n    } else {\n      s.pageName = path;\n    }\n  }\n\n  setUserProperties(properties: any) {\n    if (typeof s !== 'undefined' && s) {\n      if (typeof properties === 'object') {\n        for (const key in properties) {\n          if (properties.hasOwnProperty(key)) {\n            s[key] = properties[key];\n          }\n        }\n      }\n    }\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
