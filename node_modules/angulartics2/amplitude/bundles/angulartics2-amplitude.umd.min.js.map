{
  "version": 3,
  "file": "angulartics2-amplitude.umd.min.js",
  "sources": [
    "ng://angulartics2/amplitude/src/lib/providers/amplitude/amplitude.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var amplitude: {\n  getInstance: () => {\n    logEvent(action: string, properties: any);\n    setUserId(userId: string);\n    setUserProperties(properties: any);\n  }\n};\n\n@Injectable()\nexport class Angulartics2Amplitude {\n\n  constructor(private angulartics2: Angulartics2) {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUsername\n      .subscribe((x: any) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x: any) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      amplitude.getInstance().logEvent(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      amplitude.getInstance().setUserId(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      amplitude.getInstance().setUserProperties(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"
  ],
  "names": [
    "Angulartics2Amplitude",
    "angulartics2",
    "_this",
    "this",
    "pageTrack",
    "pipe",
    "filterDeveloperMode",
    "subscribe",
    "x",
    "path",
    "eventTrack",
    "action",
    "properties",
    "setUsername",
    "setUserProperties",
    "setUserPropertiesOnce",
    "prototype",
    "url",
    "e",
    "ReferenceError",
    "amplitude",
    "getInstance",
    "logEvent",
    "userId",
    "setUserId"
  ],
  "mappings": "mXAAA,IAaAA,EAAA,WAEE,SAAAA,EAAFC,GAAsB,IAAtBC,EAAAC,KACIA,KAAKF,aAATA,EACAE,KAAOF,aAAPG,UACOC,KAAPF,KAAiBF,aAAjBK,uBACSC,UAAT,SAAAC,GAAA,OAAAN,EAAAE,UAAAI,EAAAC,QACAN,KAAOF,aAAPS,WACOL,KAAPF,KAAiBF,aAAjBK,uBACSC,UAAT,SAAAC,GAAA,OAAAN,EAAAQ,WAAAF,EAAAG,OAAAH,EAAAI,cACAT,KAAOF,aAAPY,YACSN,UAAT,SAAAC,GAAA,OAAAN,EAAAW,YAAAL,KACAL,KAAOF,aAAPa,kBACSP,UAAT,SAAAC,GAAA,OAAAN,EAAAY,kBAAAN,KACAL,KAAOF,aAAPc,sBACAR,UAAA,SAAAC,GAAA,OAAAN,EAAAY,kBAAAN,YAGAR,EAAAgB,UAAAZ,UAAA,SAAAK,GACA,IACAN,KAAAO,WAAA,WAAA,CACAO,IAAAR,IAEA,MAASS,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAKAlB,EAAAgB,UAAAN,WAAA,SAAAC,EAAAC,GACA,IACAQ,UAAAC,cAAAC,SAAAX,EAAAC,GACA,MAASM,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAKAlB,EAAAgB,UAAAH,YAAA,SAAAU,GACA,IACAH,UAAAC,cAAAG,UAAAD,GACA,MAASL,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAKAlB,EAAAgB,UAAAF,kBAAA,SAAAF,GACA,IACAQ,UAAAC,cAAAP,kBAAAF,GACA,MAASM,GACT,KAAAA,aAAAC,gBACA,MAAAD,MAvDA"
}
