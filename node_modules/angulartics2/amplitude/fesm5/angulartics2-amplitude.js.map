{
  "version": 3,
  "file": "angulartics2-amplitude.js",
  "sources": [
    "ng://angulartics2/amplitude/src/lib/providers/amplitude/amplitude.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var amplitude: {\n  getInstance: () => {\n    logEvent(action: string, properties: any);\n    setUserId(userId: string);\n    setUserProperties(properties: any);\n  }\n};\n\n@Injectable()\nexport class Angulartics2Amplitude {\n\n  constructor(private angulartics2: Angulartics2) {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x: any) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUsername\n      .subscribe((x: any) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x: any) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x: any) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      amplitude.getInstance().logEvent(action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string) {\n    try {\n      amplitude.getInstance().setUserId(userId);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      amplitude.getInstance().setUserProperties(properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"
  ],
  "names": [],
  "mappings": ";;;;;;;AAAA,AAaA,IAAA,qBAAA,kBAAA,YAAA;;;;IAEE,SAAF,qBAAA,CAAA,YAAA,EAAA;QAAsB,IAAtB,KAAA,GAAA,IAAA,CAAkC;QAC9B,IAAI,CAAC,YAAY,GAArB,YAAA,CAAA;QACA,IAAA,CAAO,YAAP,CAAA,SAA6B;aACtB,IAAP,CAAA,IAAgB,CAAC,YAAiB,CAAlC,mBAAA,EAAA,CAAA;aACS,SAAT,CAAA,UAAA,CAAA,EAAgC,EAAhC,OAAA,KAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA;QACA,IAAA,CAAO,YAAP,CAAA,UAA8B;aACvB,IAAP,CAAA,IAAgB,CAAC,YAAiB,CAAlC,mBAAA,EAAwD,CAAC;aAChD,SAAT,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,UAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA,CAAA;QACA,IAAA,CAAO,YAAiB,CAAxB,WAAA;aACS,SAAT,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;QACA,IAAA,CAAO,YAAiB,CAAxB,iBAAA;aACS,SAAT,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;QACA,IAAA,CAAO,YAAiB,CAAxB,qBAAA;aACA,SAAA,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;;;;;IAGA,qBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAA,IAAA,EAAA;QACA,IAAM;YACN,IAAQ,CAAR,UAAA,CAAA,UAAA,EAAA;gBACA,GAAA,EAAA,IAAA;aACA,CAAA,CAAA;SAAA;QACA,OAAS,CAAC,EAAE;YACZ,IAAQ,EAAR,CAAA,YAAA,cAAA,CAAA,EAAA;gBACA,MAAA,CAAA,CAAA;aACA;SACA;;;;;;;IAGA,qBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAA,MAAA,EAAA,UAAA,EAAA;QACA,IAAM;YACN,SAAA,CAAA,WAAA,EAAA,CAAA,QAAA,CAAA,MAAA,EAAA,UAAA,CAAA,CAAA;SAAA;QACA,OAAS,CAAC,EAAE;YACZ,IAAQ,EAAR,CAAA,YAAA,cAAA,CAAA,EAAA;gBACA,MAAA,CAAA,CAAA;aACA;SACA;;;;;;IAGA,qBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,MAAA,EAAA;QACA,IAAM;YACN,SAAA,CAAA,WAAA,EAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA;SAAA;QACA,OAAS,CAAC,EAAE;YACZ,IAAQ,EAAR,CAAA,YAAA,cAAA,CAAA,EAAA;gBACA,MAAA,CAAA,CAAA;aACA;SACA;;;;;;IAGA,qBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAA,UAAA,EAAA;QACA,IAAM;YACN,SAAA,CAAA,WAAA,EAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,CAAA;SAAA;QACA,OAAS,CAAC,EAAE;YACZ,IAAQ,EAAR,CAAA,YAAA,cAAA,CAAA,EAAA;gBACA,MAAA,CAAA,CAAA;aACA;SACA;;;CA1DA,EAAA,CAAA,CAAA;;;CAVA,CAAA;;;;;;;;;;;;;"
}
