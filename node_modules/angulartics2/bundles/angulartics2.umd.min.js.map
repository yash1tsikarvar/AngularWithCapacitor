{
  "version": 3,
  "file": "angulartics2.umd.min.js",
  "sources": [
    "ng://angulartics2/src/lib/core/angulartics2-config.ts",
    "ng://angulartics2/src/lib/core/angulartics2-token.ts",
    "ng://angulartics2/src/lib/core/routerless.ts",
    "ng://angulartics2/src/lib/core/angulartics2-core.ts",
    "ng://angulartics2/src/lib/core/angular-router.ts",
    "ng://angulartics2/src/lib/core/angulartics2On.ts",
    "ng://angulartics2/src/lib/core/angulartics2.module.ts"
  ],
  "sourcesContent": [
    "export interface GoogleAnalyticsSettings {\n  /** array of additional account names (only works for analyticsjs) */\n  additionalAccountNames: string[];\n  userId: any;\n  /** see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport */\n  transport: string;\n  anonymizeIp: boolean;\n}\n\nexport interface AppInsightsSettings {\n  userId: string;\n}\n\nexport interface GoogleTagManagerSettings {\n  userId: any;\n}\n\nexport interface PageTrackingSettings {\n  autoTrackVirtualPages: boolean;\n  basePath: string;\n  excludedRoutes: (string | RegExp)[];\n  /** drop ids from url `/sections/123/pages/456` -> `/sections/pages` */\n  clearIds: boolean;\n  /** drop contents of url after hash marker `/callback#authcode=1234` -> `/callback` */\n  clearHash: boolean;\n  /** drop query params from url `/sections/123/pages?param=456&param2=789` -> `/sections/123/pages` */\n  clearQueryParams: boolean;\n  /** used with clearIds, define the matcher to clear url parts */\n  idsRegExp: RegExp;\n}\n\nexport interface Angulartics2Settings {\n  pageTracking: Partial<PageTrackingSettings>;\n  /** Disable page tracking */\n  developerMode: boolean;\n  ga: Partial<GoogleAnalyticsSettings>;\n  appInsights: Partial<AppInsightsSettings>;\n  gtm: Partial<GoogleTagManagerSettings>;\n}\n\nexport class DefaultConfig implements Angulartics2Settings {\n  pageTracking = {\n    autoTrackVirtualPages: true,\n    basePath: '',\n    excludedRoutes: [],\n    clearIds: false,\n    clearHash: false,\n    clearQueryParams: false,\n    idsRegExp: /^\\d+$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/,\n  };\n  developerMode = false;\n  ga = {};\n  appInsights = {};\n  gtm = {};\n}\n",
    "import { InjectionToken, Provider } from '@angular/core';\n\nimport { Angulartics2Settings } from './angulartics2-config';\n\nexport interface Angulartics2Token {\n  providers: Provider[];\n  settings: Partial<Angulartics2Settings>;\n}\n\nexport const ANGULARTICS2_TOKEN = new InjectionToken<Angulartics2Token>('ANGULARTICS2');\n",
    "import { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Angulartics2Settings } from './angulartics2-config';\n\nexport interface TrackNavigationEnd {\n  url: string;\n}\n\nexport class RouterlessTracking {\n  trackLocation(settings: Angulartics2Settings): Observable<TrackNavigationEnd> {\n    return new BehaviorSubject<TrackNavigationEnd>({ url: '/' });\n  }\n  prepareExternalUrl(url: string): string {\n    return url;\n  }\n}\n",
    "import { Inject, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { MonoTypeOperatorFunction } from 'rxjs/interfaces';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { Angulartics2Settings, DefaultConfig } from './angulartics2-config';\nimport { EventTrack, PageTrack, UserTimings } from './angulartics2-interfaces';\nimport { Angulartics2Token, ANGULARTICS2_TOKEN } from './angulartics2-token';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n@Injectable()\nexport class Angulartics2 {\n  settings: Angulartics2Settings;\n\n  pageTrack = new ReplaySubject<Partial<PageTrack>>(10);\n  eventTrack = new ReplaySubject<Partial<EventTrack>>(10);\n  exceptionTrack = new ReplaySubject<any>(10);\n  setAlias = new ReplaySubject<string>(10);\n  setUsername = new ReplaySubject<{ userId: string | number } | string>(10);\n  setUserProperties = new ReplaySubject<any>(10);\n  setUserPropertiesOnce = new ReplaySubject<any>(10);\n  setSuperProperties = new ReplaySubject<any>(10);\n  setSuperPropertiesOnce = new ReplaySubject<any>(10);\n  userTimings = new ReplaySubject<UserTimings>(10);\n\n  constructor(\n    private tracker: RouterlessTracking,\n    @Inject(ANGULARTICS2_TOKEN) setup: Angulartics2Token,\n  ) {\n    const defaultConfig = new DefaultConfig();\n    this.settings = { ...defaultConfig, ...setup.settings };\n    this.settings.pageTracking = {\n      ...defaultConfig.pageTracking,\n      ...setup.settings.pageTracking,\n    };\n    this.tracker\n      .trackLocation(this.settings)\n      .subscribe((event: TrackNavigationEnd) =>\n        this.trackUrlChange(event.url),\n      );\n  }\n\n  /** @deprecated */\n  virtualPageviews(value: boolean) {\n    this.settings.pageTracking.autoTrackVirtualPages = value;\n  }\n  /** @deprecated */\n  excludeRoutes(routes: Array<string | RegExp>) {\n    this.settings.pageTracking.excludedRoutes = routes;\n  }\n  /** @deprecated */\n  withBase(value: string) {\n    this.settings.pageTracking.basePath = value;\n  }\n  /** @deprecated */\n  clearIds(value: boolean) {\n    this.settings.pageTracking.clearIds = value;\n  }\n  /** @deprecated */\n  developerMode(value: boolean) {\n    this.settings.developerMode = value;\n  }\n\n  /** filters all events when developer mode is true */\n  filterDeveloperMode<T>(): MonoTypeOperatorFunction<T> {\n    return filter((value, index) => !this.settings.developerMode);\n  }\n\n  protected trackUrlChange(url: string) {\n    if (this.settings.pageTracking.autoTrackVirtualPages && !this.matchesExcludedRoute(url)) {\n      const clearedUrl = this.clearUrl(url);\n      let path: string;\n      if (this.settings.pageTracking.basePath.length) {\n        path = this.settings.pageTracking.basePath + clearedUrl;\n      } else {\n        path = this.tracker.prepareExternalUrl(clearedUrl);\n      }\n      this.pageTrack.next({ path });\n    }\n  }\n\n  /**\n   * Use string literals or regular expressions to exclude routes\n   * from automatic pageview tracking.\n   *\n   * @param url location\n   */\n  protected matchesExcludedRoute(url: string): boolean {\n    for (const excludedRoute of this.settings.pageTracking.excludedRoutes) {\n      const matchesRegex = excludedRoute instanceof RegExp && excludedRoute.test(url);\n      if (matchesRegex || url.indexOf(<string>excludedRoute) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Removes id's from tracked route.\n   *  EX: `/project/12981/feature` becomes `/project/feature`\n   *\n   * @param url current page path\n   */\n  protected clearUrl(url: string): string {\n    if (this.settings.pageTracking.clearIds || this.settings.pageTracking.clearQueryParams ||\n      this.settings.pageTracking.clearHash) {\n      return url\n        .split('/')\n        .map(part => this.settings.pageTracking.clearQueryParams ? part.split('?')[0] : part)\n        .map(part => this.settings.pageTracking.clearHash ? part.split('#')[0] : part)\n        .filter(part => !this.settings.pageTracking.clearIds || !part.match(this.settings.pageTracking.idsRegExp))\n        .join('/');\n    }\n    return url;\n  }\n}\n",
    "import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { delay } from 'rxjs/operators/delay';\nimport { filter } from 'rxjs/operators/filter';\nimport { map } from 'rxjs/operators/map';\n\nimport { Observable } from 'rxjs/Observable';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n/**\n * Track Route changes for applications using Angular's\n * default router\n *\n * @link https://angular.io/api/router/Router\n */\n@Injectable()\nexport class AngularRouterTracking implements RouterlessTracking {\n  constructor(\n    private router: Router,\n    private location: Location,\n  ) {}\n\n  trackLocation(settings): Observable<TrackNavigationEnd> {\n    return this.router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      filter(() => !settings.developerMode),\n      map((e: NavigationEnd) => {\n        return { url: e.urlAfterRedirects };\n      }),\n      delay(0),\n    );\n  }\n\n  prepareExternalUrl(url: string): string {\n    return this.location.prepareExternalUrl(url);\n  }\n}\n",
    "import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Injectable,\n  Input,\n  NgModule,\n  Renderer2,\n} from '@angular/core';\nimport { Angulartics2 } from './angulartics2-core';\n\n@Injectable()\n@Directive({ selector: '[angulartics2On]' })\nexport class Angulartics2On implements AfterContentInit {\n  @Input('angulartics2On') angulartics2On: string;\n  @Input() angularticsAction: string;\n  @Input() angularticsCategory: string;\n  @Input() angularticsLabel: string;\n  @Input() angularticsValue: string;\n  @Input() angularticsProperties: any = {};\n\n  constructor(\n    private elRef: ElementRef,\n    private angulartics2: Angulartics2,\n    private renderer: Renderer2\n  ) { }\n\n  ngAfterContentInit() {\n    this.renderer.listen(\n      this.elRef.nativeElement,\n      this.angulartics2On || 'click',\n      (event: Event) => this.eventTrack(event),\n    );\n  }\n\n  eventTrack(event: Event) {\n    const action = this.angularticsAction; // || this.inferEventName();\n    const properties: any = {\n      ...this.angularticsProperties,\n      eventType: event.type,\n    };\n\n    if (this.angularticsCategory) {\n      properties.category = this.angularticsCategory;\n    }\n    if (this.angularticsLabel) {\n      properties.label = this.angularticsLabel;\n    }\n    if (this.angularticsValue) {\n      properties.value = this.angularticsValue;\n    }\n\n    this.angulartics2.eventTrack.next({\n      action,\n      properties,\n    });\n  }\n\n  /*private isCommand() {\n    return ['a:', 'button:', 'button:button', 'button:submit', 'input:button', 'input:submit'].indexOf(\n      getDOM().tagName(this.el).toLowerCase() + ':' + (getDOM().type(this.el) || '')) >= 0;\n  }\n\n  private inferEventName() {\n    if (this.isCommand()) return getDOM().getText(this.el) || getDOM().getValue(this.el);\n    return getDOM().getProperty(this.el, 'id') || getDOM().getProperty(this.el, 'name') || getDOM().tagName(this.el);\n  }*/\n}\n\n@NgModule({\n  declarations: [Angulartics2On],\n  exports: [Angulartics2On],\n})\nexport class Angulartics2OnModule {}\n",
    "import {\n  ModuleWithProviders,\n  NgModule,\n  Provider,\n} from '@angular/core';\n\nimport { AngularRouterTracking } from './angular-router';\nimport { Angulartics2Settings } from './angulartics2-config';\nimport { Angulartics2 } from './angulartics2-core';\nimport { ANGULARTICS2_TOKEN } from './angulartics2-token';\nimport { Angulartics2On, Angulartics2OnModule } from './angulartics2On';\nimport { RouterlessTracking } from './routerless';\n\n\n@NgModule({\n  imports: [Angulartics2OnModule],\n  exports: [Angulartics2On],\n})\nexport class Angulartics2Module {\n  static forRoot(\n    providers: Provider[],\n    settings: Partial<Angulartics2Settings> = {},\n  ): ModuleWithProviders {\n    return {\n      ngModule: Angulartics2Module,\n      providers: [\n        { provide: ANGULARTICS2_TOKEN, useValue: { providers, settings } },\n        Angulartics2,\n        { provide: RouterlessTracking, useClass: AngularRouterTracking },\n        ...providers,\n      ],\n    };\n  }\n}\n"
  ],
  "names": [
    "DefaultConfig",
    "this",
    "pageTracking",
    "autoTrackVirtualPages",
    "basePath",
    "excludedRoutes",
    "clearIds",
    "clearHash",
    "clearQueryParams",
    "idsRegExp",
    "developerMode",
    "ga",
    "appInsights",
    "gtm",
    "ANGULARTICS2_TOKEN",
    "InjectionToken",
    "RouterlessTracking",
    "prototype",
    "trackLocation",
    "settings",
    "prepareExternalUrl",
    "url",
    "Angulartics2",
    "tracker",
    "setup",
    "_this",
    "pageTrack",
    "ReplaySubject",
    "eventTrack",
    "exceptionTrack",
    "setAlias",
    "setUsername",
    "setUserProperties",
    "setUserPropertiesOnce",
    "setSuperProperties",
    "setSuperPropertiesOnce",
    "userTimings",
    "defaultConfig",
    "Object",
    "assign",
    "virtualPageviews",
    "value",
    "excludeRoutes",
    "routes",
    "withBase",
    "filterDeveloperMode",
    "trackUrlChange",
    "matchesExcludedRoute",
    "clearedUrl",
    "clearUrl",
    "path",
    "length",
    "_a",
    "tslib_1.__values",
    "_b",
    "next",
    "done",
    "excludedRoute",
    "RegExp",
    "test",
    "indexOf",
    "_c",
    "return",
    "call",
    "e_1",
    "error",
    "split",
    "AngularRouterTracking",
    "router",
    "location",
    "events",
    "pipe",
    "filter",
    "e",
    "NavigationEnd",
    "map",
    "urlAfterRedirects",
    "delay",
    "ctorParameters",
    "Angulartics2On",
    "elRef",
    "angulartics2",
    "renderer",
    "angularticsProperties",
    "ngAfterContentInit",
    "listen",
    "nativeElement",
    "angulartics2On",
    "event",
    "action",
    "angularticsAction",
    "properties",
    "eventType",
    "type",
    "angularticsCategory",
    "category",
    "angularticsLabel",
    "label",
    "angularticsValue",
    "Renderer2",
    "propDecorators",
    "Input",
    "args",
    "Angulartics2OnModule",
    "Angulartics2Module",
    "forRoot",
    "providers",
    "ngModule",
    "tslib_1.__spread",
    "provide",
    "useValue",
    "useClass"
  ],
  "mappings": "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"
}
