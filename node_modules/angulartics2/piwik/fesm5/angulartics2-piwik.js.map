{
  "version": 3,
  "file": "angulartics2-piwik.js",
  "sources": [
    "ng://angulartics2/piwik/src/lib/providers/piwik/piwik.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var _paq: any;\n\n@Injectable()\nexport class Angulartics2Piwik {\n\n  constructor(private angulartics2: Angulartics2) {\n    if (typeof (_paq) === 'undefined') {\n      console.warn('Piwik not found');\n    }\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string, location?: any) {\n    try {\n      _paq.push(['setDocumentTitle', window.document.title]);\n      _paq.push(['setCustomUrl', path]);\n      _paq.push(['trackPageView']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Track a basic event in Piwik, or send an ecommerce event.\n   *\n   * @param action A string corresponding to the type of event that needs to be tracked.\n   * @param properties The properties that need to be logged with the event.\n   */\n  eventTrack(action: string, properties: any = {}) {\n    let params = [];\n    switch (action) {\n      /**\n       * @description Sets the current page view as a product or category page view. When you call\n       * setEcommerceView it must be followed by a call to trackPageView to record the product or\n       * category page view.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-product-page-views-category-page-views-optional\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property productSKU (required) SKU: Product unique identifier\n       * @property productName (optional) Product name\n       * @property categoryName (optional) Product category, or array of up to 5 categories\n       * @property price (optional) Product Price as displayed on the page\n       */\n      case 'setEcommerceView':\n        params = ['setEcommerceView',\n          properties.productSKU,\n          properties.productName,\n          properties.categoryName,\n          properties.price,\n        ];\n        break;\n\n      /**\n       * @description Adds a product into the ecommerce order. Must be called for each product in\n       * the order.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-ecommerce-orders-items-purchased-required\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property productSKU (required) SKU: Product unique identifier\n       * @property productName (optional) Product name\n       * @property categoryName (optional) Product category, or array of up to 5 categories\n       * @property price (recommended) Product price\n       * @property quantity (optional, default to 1) Product quantity\n       */\n      case 'addEcommerceItem':\n        params = [\n          'addEcommerceItem',\n          properties.productSKU,\n          properties.productName,\n          properties.productCategory,\n          properties.price,\n          properties.quantity,\n        ];\n        break;\n\n      /**\n       * @description Tracks a shopping cart. Call this javascript function every time a user is\n       * adding, updating or deleting a product from the cart.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-add-to-cart-items-added-to-the-cart-optional\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property grandTotal (required) Cart amount\n       */\n      case 'trackEcommerceCartUpdate':\n        params = ['trackEcommerceCartUpdate', properties.grandTotal];\n        break;\n\n      /**\n       * @description Tracks an Ecommerce order, including any ecommerce item previously added to\n       * the order. orderId and grandTotal (ie. revenue) are required parameters.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-ecommerce-orders-items-purchased-required\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property orderId (required) Unique Order ID\n       * @property grandTotal (required) Order Revenue grand total (includes tax, shipping, and subtracted discount)\n       * @property subTotal (optional) Order sub total (excludes shipping)\n       * @property tax (optional) Tax amount\n       * @property shipping (optional) Shipping amount\n       * @property discount (optional) Discount offered (set to false for unspecified parameter)\n       */\n      case 'trackEcommerceOrder':\n        params = [\n          'trackEcommerceOrder',\n          properties.orderId,\n          properties.grandTotal,\n          properties.subTotal,\n          properties.tax,\n          properties.shipping,\n          properties.discount,\n        ];\n        break;\n\n      /**\n       * @description Tracks an Ecommerce goal\n       *\n       * @link https://piwik.org/docs/tracking-goals-web-analytics/\n       * @link https://developer.piwik.org/guides/tracking-javascript-guide#manually-trigger-goal-conversions\n       *\n       * @property goalId (required) Unique Goal ID\n       * @property value (optional) passed to goal tracking\n       */\n      case 'trackGoal':\n        params = [\n          'trackGoal',\n          properties.goalId,\n          properties.value,\n        ];\n        break;\n\n      /**\n       * @description Logs an event with an event category (Videos, Music, Games...), an event\n       * action (Play, Pause, Duration, Add Playlist, Downloaded, Clicked...), and an optional\n       * event name and optional numeric value.\n       *\n       * @link https://piwik.org/docs/event-tracking/\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#using-the-tracker-object\n       *\n       * @property category\n       * @property action\n       * @property name (optional, recommended)\n       * @property value (optional)\n       */\n      default:\n        // PAQ requires that eventValue be an integer, see: http://piwik.org/docs/event-tracking\n        if (properties.value) {\n          const parsed = parseInt(properties.value, 10);\n          properties.value = isNaN(parsed) ? 0 : parsed;\n        }\n\n        params = [\n          'trackEvent',\n          properties.category,\n          action,\n          properties.name || properties.label, // Changed in favour of Piwik documentation. Added fallback so it's backwards compatible.\n          properties.value,\n        ];\n    }\n    try {\n      _paq.push(params);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string | boolean) {\n    try {\n      _paq.push(['setUserId', userId]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets custom dimensions if at least one property has the key \"dimension<n>\",\n   * e.g. dimension10. If there are custom dimensions, any other property is ignored.\n   *\n   * If there are no custom dimensions in the given properties object, the properties\n   * object is saved as a custom variable.\n   *\n   * If in doubt, prefer custom dimensions.\n   * @link https://piwik.org/docs/custom-variables/\n   */\n  setUserProperties(properties: any) {\n    const dimensions = this.setCustomDimensions(properties);\n    try {\n      if (dimensions.length === 0) {\n        _paq.push(['setCustomVariable', properties]);\n      }\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  private setCustomDimensions(properties: any): string[] {\n    const dimensionRegex: RegExp = /dimension[1-9]\\d*/;\n    const dimensions = Object.keys(properties)\n      .filter(key => dimensionRegex.exec(key));\n    dimensions.forEach(dimension => {\n      const number = Number(dimension.substr(9));\n      _paq.push(['setCustomDimension', number, properties[dimension]]);\n    });\n    return dimensions;\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
