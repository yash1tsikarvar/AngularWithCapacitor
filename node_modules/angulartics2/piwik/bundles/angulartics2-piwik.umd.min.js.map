{
  "version": 3,
  "file": "angulartics2-piwik.umd.min.js",
  "sources": [
    "ng://angulartics2/piwik/src/lib/providers/piwik/piwik.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var _paq: any;\n\n@Injectable()\nexport class Angulartics2Piwik {\n\n  constructor(private angulartics2: Angulartics2) {\n    if (typeof (_paq) === 'undefined') {\n      console.warn('Piwik not found');\n    }\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string, location?: any) {\n    try {\n      _paq.push(['setDocumentTitle', window.document.title]);\n      _paq.push(['setCustomUrl', path]);\n      _paq.push(['trackPageView']);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Track a basic event in Piwik, or send an ecommerce event.\n   *\n   * @param action A string corresponding to the type of event that needs to be tracked.\n   * @param properties The properties that need to be logged with the event.\n   */\n  eventTrack(action: string, properties: any = {}) {\n    let params = [];\n    switch (action) {\n      /**\n       * @description Sets the current page view as a product or category page view. When you call\n       * setEcommerceView it must be followed by a call to trackPageView to record the product or\n       * category page view.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-product-page-views-category-page-views-optional\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property productSKU (required) SKU: Product unique identifier\n       * @property productName (optional) Product name\n       * @property categoryName (optional) Product category, or array of up to 5 categories\n       * @property price (optional) Product Price as displayed on the page\n       */\n      case 'setEcommerceView':\n        params = ['setEcommerceView',\n          properties.productSKU,\n          properties.productName,\n          properties.categoryName,\n          properties.price,\n        ];\n        break;\n\n      /**\n       * @description Adds a product into the ecommerce order. Must be called for each product in\n       * the order.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-ecommerce-orders-items-purchased-required\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property productSKU (required) SKU: Product unique identifier\n       * @property productName (optional) Product name\n       * @property categoryName (optional) Product category, or array of up to 5 categories\n       * @property price (recommended) Product price\n       * @property quantity (optional, default to 1) Product quantity\n       */\n      case 'addEcommerceItem':\n        params = [\n          'addEcommerceItem',\n          properties.productSKU,\n          properties.productName,\n          properties.productCategory,\n          properties.price,\n          properties.quantity,\n        ];\n        break;\n\n      /**\n       * @description Tracks a shopping cart. Call this javascript function every time a user is\n       * adding, updating or deleting a product from the cart.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-add-to-cart-items-added-to-the-cart-optional\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property grandTotal (required) Cart amount\n       */\n      case 'trackEcommerceCartUpdate':\n        params = ['trackEcommerceCartUpdate', properties.grandTotal];\n        break;\n\n      /**\n       * @description Tracks an Ecommerce order, including any ecommerce item previously added to\n       * the order. orderId and grandTotal (ie. revenue) are required parameters.\n       *\n       * @link https://piwik.org/docs/ecommerce-analytics/#tracking-ecommerce-orders-items-purchased-required\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#ecommerce\n       *\n       * @property orderId (required) Unique Order ID\n       * @property grandTotal (required) Order Revenue grand total (includes tax, shipping, and subtracted discount)\n       * @property subTotal (optional) Order sub total (excludes shipping)\n       * @property tax (optional) Tax amount\n       * @property shipping (optional) Shipping amount\n       * @property discount (optional) Discount offered (set to false for unspecified parameter)\n       */\n      case 'trackEcommerceOrder':\n        params = [\n          'trackEcommerceOrder',\n          properties.orderId,\n          properties.grandTotal,\n          properties.subTotal,\n          properties.tax,\n          properties.shipping,\n          properties.discount,\n        ];\n        break;\n\n      /**\n       * @description Tracks an Ecommerce goal\n       *\n       * @link https://piwik.org/docs/tracking-goals-web-analytics/\n       * @link https://developer.piwik.org/guides/tracking-javascript-guide#manually-trigger-goal-conversions\n       *\n       * @property goalId (required) Unique Goal ID\n       * @property value (optional) passed to goal tracking\n       */\n      case 'trackGoal':\n        params = [\n          'trackGoal',\n          properties.goalId,\n          properties.value,\n        ];\n        break;\n\n      /**\n       * @description Logs an event with an event category (Videos, Music, Games...), an event\n       * action (Play, Pause, Duration, Add Playlist, Downloaded, Clicked...), and an optional\n       * event name and optional numeric value.\n       *\n       * @link https://piwik.org/docs/event-tracking/\n       * @link https://developer.piwik.org/api-reference/tracking-javascript#using-the-tracker-object\n       *\n       * @property category\n       * @property action\n       * @property name (optional, recommended)\n       * @property value (optional)\n       */\n      default:\n        // PAQ requires that eventValue be an integer, see: http://piwik.org/docs/event-tracking\n        if (properties.value) {\n          const parsed = parseInt(properties.value, 10);\n          properties.value = isNaN(parsed) ? 0 : parsed;\n        }\n\n        params = [\n          'trackEvent',\n          properties.category,\n          action,\n          properties.name || properties.label, // Changed in favour of Piwik documentation. Added fallback so it's backwards compatible.\n          properties.value,\n        ];\n    }\n    try {\n      _paq.push(params);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUsername(userId: string | boolean) {\n    try {\n      _paq.push(['setUserId', userId]);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Sets custom dimensions if at least one property has the key \"dimension<n>\",\n   * e.g. dimension10. If there are custom dimensions, any other property is ignored.\n   *\n   * If there are no custom dimensions in the given properties object, the properties\n   * object is saved as a custom variable.\n   *\n   * If in doubt, prefer custom dimensions.\n   * @link https://piwik.org/docs/custom-variables/\n   */\n  setUserProperties(properties: any) {\n    const dimensions = this.setCustomDimensions(properties);\n    try {\n      if (dimensions.length === 0) {\n        _paq.push(['setCustomVariable', properties]);\n      }\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  private setCustomDimensions(properties: any): string[] {\n    const dimensionRegex: RegExp = /dimension[1-9]\\d*/;\n    const dimensions = Object.keys(properties)\n      .filter(key => dimensionRegex.exec(key));\n    dimensions.forEach(dimension => {\n      const number = Number(dimension.substr(9));\n      _paq.push(['setCustomDimension', number, properties[dimension]]);\n    });\n    return dimensions;\n  }\n}\n"
  ],
  "names": [
    "Angulartics2Piwik",
    "angulartics2",
    "_this",
    "this",
    "console",
    "warn",
    "pageTrack",
    "pipe",
    "filterDeveloperMode",
    "subscribe",
    "x",
    "path",
    "eventTrack",
    "action",
    "properties",
    "setUsername",
    "setUserProperties",
    "prototype",
    "location",
    "_paq",
    "push",
    "window",
    "document",
    "title",
    "e",
    "ReferenceError",
    "params",
    "productSKU",
    "productName",
    "categoryName",
    "price",
    "productCategory",
    "quantity",
    "orderId",
    "grandTotal",
    "subTotal",
    "tax",
    "shipping",
    "discount",
    "goalId",
    "value",
    "parsed",
    "parseInt",
    "isNaN",
    "category",
    "name",
    "label",
    "userId",
    "dimensions",
    "setCustomDimensions",
    "length",
    "dimensionRegex",
    "Object",
    "keys",
    "filter",
    "key",
    "exec",
    "forEach",
    "dimension",
    "number",
    "Number",
    "substr",
    "type",
    "Injectable"
  ],
  "mappings": "2WAAA,IAOAA,EAAA,WAEE,SAAAA,EAAFC,GAAsB,IAAtBC,EAAAC,KACIA,KAAJF,aAAAA,EACA,oBAAM,MACNG,QAAAC,KAAA,mBAEAF,KAAOF,aAAPK,UACOC,KAAPJ,KAAiBF,aAAjBO,uBACSC,UAAT,SAAAC,GAAA,OAAAR,EAAAI,UAAAI,EAAAC,QACAR,KAAOF,aAAPW,WACOL,KAAPJ,KAAiBF,aAAjBO,uBACSC,UAAT,SAAAC,GAAA,OAAAR,EAAAU,WAAAF,EAAAG,OAAAH,EAAAI,cACAX,KAAOF,aAAPc,YACSN,UAAT,SAAAC,GAAA,OAAAR,EAAAa,YAAAL,KACAP,KAAOF,aAAPe,kBACAP,UAAA,SAAAC,GAAA,OAAAR,EAAAc,kBAAAN,KAjBA,OAoBAV,EAAAiB,UAAAX,UAAA,SAAAK,EAAAO,GACA,IACMC,KAAKC,KAAK,CAAC,mBAAoBC,OAArCC,SAAAC,QACMJ,KAAKC,KAAK,CAAC,eAAgBT,IACjCQ,KAAAC,KAAA,CAAA,kBACA,MAASI,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAWAxB,EAAAiB,UAAAL,WAAA,SAAAC,EAAAC,QACA,IAAAA,IAAAA,EAAA,uBAgBA,IAAA,mBACAY,EAAA,CAAA,mBACUZ,EAAWa,WACXb,EAAWc,YACrBd,EAAAe,aACAf,EAAAgB,aAiBA,IAAA,mBACAJ,EAAA,CACU,mBACAZ,EAAWa,WACXb,EAAWc,YACXd,EAAWiB,gBACrBjB,EAAAgB,MACAhB,EAAAkB,gBAaA,IAAA,6EAkBA,IAAA,sBACAN,EAAA,CACU,sBACAZ,EAAWmB,QACXnB,EAAWoB,WACXpB,EAAWqB,SACXrB,EAAWsB,IACrBtB,EAAAuB,SACAvB,EAAAwB,gBAaA,IAAA,YACAZ,EAAA,CACU,YACVZ,EAAAyB,OACAzB,EAAA0B,aAiBA,QAEA,GAAU1B,EAAW0B,MAArB,CACA,IAAAC,EAAAC,SAAA5B,EAAA0B,MAAA,IAEA1B,EAAA0B,MAAAG,MAAAF,GAAA,EAAAA,EAEAf,EAAA,CACU,aACAZ,EAAW8B,WACX9B,EAAW+B,MAArB/B,EAAAgC,MAEAhC,EAAA0B,OAGA,IAAArB,KAAAC,KAAAM,GAEA,MAAAF,GACA,KAAAA,aAAAC,gBACA,MAAAD,IAKAxB,EAAgBiB,UAAhBF,YAAA,SAAAgC,GACA,IAAA5B,KAAAC,KAAA,CAAA,YAAiB2B,IAEjB,MAAAvB,GACA,KAAAA,aAAAC,gBACA,MAAAD,IAeAxB,EAAAiB,UAAAD,kBAAA,SAAAF,GACA,IAAAkC,EAAoC7C,KAApC8C,oBAAAnC,GACA,IACA,IAAAkC,EAAAE,QACA/B,KAAAC,KAAA,CAAA,oBAAAN,IAEA,MAAAU,GACA,KAAAA,aAAAC,gBACA,MAAAD,IAKAxB,EAAAiB,UAAAgC,oBAAA,SAAAnC,GACA,IAAAqC,EAAwC,oBACxCH,EAAAI,OAAAC,KAAAvC,GACAwC,OAAA,SAAAC,GAAA,OAAqBJ,EAArBK,KAAAD,YACAP,EAAAS,QAAA,SAAAC,GACA,IAAAC,EAAAC,OAAAF,EAAAG,OAAA,IACA1C,KAAAC,KAAA,CAAA,qBAAAuC,EAAA7C,EAAA4C,UA5NA1D,EACA,iBALA,CAAA8D,KAASC,EAAAA"
}
