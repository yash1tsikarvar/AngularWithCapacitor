/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { TransitionService } from '@uirouter/core';
import { Subject } from 'rxjs/Subject';
/**
 * Track Route changes for applications using UI-Router
 *
 * @link https://ui-router.github.io/ng2/docs/latest/
 *
 * referenced: https://github.com/ui-router/sample-app-angular/blob/9adb533b85c0f0fccef23968489cca0a5ec84654/src/app/util/ga.ts
 */
export class UIRouterTracking {
    /**
     * @param {?} transitionService
     */
    constructor(transitionService) {
        this.transitionService = transitionService;
    }
    /**
     * @param {?} trans
     * @return {?}
     */
    path(trans) {
        return trans.$to().url.format(trans.params());
    }
    /**
     * @param {?} settings
     * @return {?}
     */
    trackLocation(settings) {
        const /** @type {?} */ subject = new Subject();
        this.transitionService.onSuccess({}, trans => {
            return subject.next({ url: this.path(trans) });
        }, {
            priority: -10000,
        });
        return subject;
    }
    /**
     * @param {?} url
     * @return {?}
     */
    prepareExternalUrl(url) {
        return url;
    }
}
UIRouterTracking.decorators = [
    { type: Injectable },
];
/** @nocollapse */
UIRouterTracking.ctorParameters = () => [
    { type: TransitionService, },
];
function UIRouterTracking_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    UIRouterTracking.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    UIRouterTracking.ctorParameters;
    /** @type {?} */
    UIRouterTracking.prototype.transitionService;
}
//# sourceMappingURL=uirouter.js.map
