{
  "version": 3,
  "file": "angulartics2-uiroutermodule.umd.min.js",
  "sources": [
    "ng://angulartics2/uiroutermodule/src/lib/uiroutermodule/uirouter.ts",
    "ng://angulartics2/uiroutermodule/src/lib/uiroutermodule/uirouter.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { Transition, TransitionService } from '@uirouter/core';\n\nimport { Subject } from 'rxjs/Subject';\n\nimport { RouterlessTracking, TrackNavigationEnd } from 'angulartics2';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Track Route changes for applications using UI-Router\n *\n * @link https://ui-router.github.io/ng2/docs/latest/\n *\n * referenced: https://github.com/ui-router/sample-app-angular/blob/9adb533b85c0f0fccef23968489cca0a5ec84654/src/app/util/ga.ts\n */\n@Injectable()\nexport class UIRouterTracking implements RouterlessTracking {\n  constructor(private transitionService: TransitionService) {}\n\n  path(trans: Transition) {\n    return trans.$to().url.format(trans.params());\n  }\n\n  trackLocation(settings): Observable<TrackNavigationEnd> {\n    const subject = new Subject<TrackNavigationEnd>();\n    this.transitionService.onSuccess(\n      {},\n      trans => {\n        return subject.next({ url: this.path(trans) });\n      },\n      {\n        priority: -10000,\n      },\n    );\n    return subject;\n  }\n\n  prepareExternalUrl(url: string): string {\n    return url;\n  }\n}\n",
    "import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\n\nimport {\n  Angulartics2,\n  Angulartics2OnModule,\n  Angulartics2Settings,\n  ANGULARTICS2_TOKEN,\n  RouterlessTracking,\n} from 'angulartics2';\nimport { UIRouterTracking } from './uirouter';\n\n@NgModule({\n  imports: [Angulartics2OnModule],\n})\nexport class Angulartics2UirouterModule {\n  static forRoot(\n    providers: Provider[],\n    settings: Partial<Angulartics2Settings> = {},\n  ): ModuleWithProviders {\n    return {\n      ngModule: Angulartics2UirouterModule,\n      providers: [\n        { provide: ANGULARTICS2_TOKEN, useValue: { providers, settings } },\n        Angulartics2,\n        { provide: RouterlessTracking, useClass: UIRouterTracking },\n        ...providers,\n      ],\n    };\n  }\n}\n"
  ],
  "names": [
    "UIRouterTracking",
    "transitionService",
    "this",
    "prototype",
    "path",
    "trans",
    "$to",
    "url",
    "format",
    "params",
    "trackLocation",
    "settings",
    "_this",
    "subject",
    "Subject",
    "onSuccess",
    "next",
    "priority",
    "prepareExternalUrl",
    "Angulartics2UirouterModule",
    "forRoot",
    "providers",
    "ngModule",
    "tslib_1.__spread",
    "provide",
    "ANGULARTICS2_TOKEN",
    "useValue",
    "Angulartics2",
    "RouterlessTracking",
    "useClass"
  ],
  "mappings": "ogBAgBA,IAAAA,EAAA,WACE,SAAAA,EAAFC,GAAsBC,KAAtBD,kBAAsBA,SAEpBD,EAAFG,UAAAC,KAAA,SAAAC,GACI,OAAOA,EAAMC,MAAMC,IAAIC,OAAOH,EAAMI,WAGtCT,EAAFG,UAAAO,cAAA,SAAAC,GACI,IAAJC,EAAAV,KACAW,EAAA,IACQC,EAAAA,QASR,OAPAZ,KAAAD,kBAA2Bc,UAA3B,GAAA,SAAmDV,GACnD,OAAAQ,EAAAG,KAAA,CAAAT,IAAAK,EAAAR,KAAAC,MAEA,CACAY,UAAA,MAGAJ,GAGAb,EAAAG,UAAAe,mBAAA,SAAAX,GACA,OAAAA,KAvBA,qICJA,OASAY,EAAAC,QAAA,SAAAC,EAAAV,GAEA,YADiB,IAAjBA,IAAAA,EAAA,IACA,CACAW,SAAAH,EACAE,UAAAE,EAAAA,SAAA,CACA,CAAAC,QAAAC,EAAAA,mBAAAC,SAAA,CAAAL,UAAAA,EAAAV,SAAAA,IACAgB,EAAAA,aACA,CAAAH,QAAAI,EAAAA,mBAAAC,SAAA7B,SAhBAmB"
}
