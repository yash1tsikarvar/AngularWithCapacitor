import { Injectable, NgModule } from '@angular/core';
import { TransitionService } from '@uirouter/core';
import { Subject } from 'rxjs/Subject';
import { __spread } from 'tslib';
import { Angulartics2, Angulartics2OnModule, ANGULARTICS2_TOKEN, RouterlessTracking } from 'angulartics2';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Track Route changes for applications using UI-Router
 *
 * @link https://ui-router.github.io/ng2/docs/latest/
 *
 * referenced: https://github.com/ui-router/sample-app-angular/blob/9adb533b85c0f0fccef23968489cca0a5ec84654/src/app/util/ga.ts
 */
var UIRouterTracking = /** @class */ (function () {
    /**
     * @param {?} transitionService
     */
    function UIRouterTracking(transitionService) {
        this.transitionService = transitionService;
    }
    /**
     * @param {?} trans
     * @return {?}
     */
    UIRouterTracking.prototype.path = function (trans) {
        return trans.$to().url.format(trans.params());
    };
    /**
     * @param {?} settings
     * @return {?}
     */
    UIRouterTracking.prototype.trackLocation = function (settings) {
        var _this = this;
        var /** @type {?} */ subject = new Subject();
        this.transitionService.onSuccess({}, function (trans) {
            return subject.next({ url: _this.path(trans) });
        }, {
            priority: -10000,
        });
        return subject;
    };
    /**
     * @param {?} url
     * @return {?}
     */
    UIRouterTracking.prototype.prepareExternalUrl = function (url) {
        return url;
    };
    return UIRouterTracking;
}());
UIRouterTracking.decorators = [
    { type: Injectable },
];
/** @nocollapse */
UIRouterTracking.ctorParameters = function () { return [
    { type: TransitionService, },
]; };

var Angulartics2UirouterModule = /** @class */ (function () {
    function Angulartics2UirouterModule() {
    }
    /**
     * @param {?} providers
     * @param {?=} settings
     * @return {?}
     */
    Angulartics2UirouterModule.forRoot = function (providers, settings) {
        if (settings === void 0) { settings = {}; }
        return {
            ngModule: Angulartics2UirouterModule,
            providers: __spread([
                { provide: ANGULARTICS2_TOKEN, useValue: { providers: providers, settings: settings } },
                Angulartics2,
                { provide: RouterlessTracking, useClass: UIRouterTracking }
            ], providers),
        };
    };
    return Angulartics2UirouterModule;
}());
Angulartics2UirouterModule.decorators = [
    { type: NgModule, args: [{
                imports: [Angulartics2OnModule],
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { Angulartics2UirouterModule, UIRouterTracking };
//# sourceMappingURL=angulartics2-uiroutermodule.js.map
