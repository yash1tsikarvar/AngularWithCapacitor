{
  "version": 3,
  "file": "angulartics2.js",
  "sources": [
    "ng://angulartics2/src/lib/core/angulartics2.module.ts",
    "ng://angulartics2/src/lib/core/angulartics2On.ts",
    "ng://angulartics2/src/lib/core/angular-router.ts",
    "ng://angulartics2/src/lib/core/angulartics2-core.ts",
    "ng://angulartics2/src/lib/core/routerless.ts",
    "ng://angulartics2/src/lib/core/angulartics2-token.ts",
    "ng://angulartics2/src/lib/core/angulartics2-config.ts"
  ],
  "sourcesContent": [
    "import {\n  ModuleWithProviders,\n  NgModule,\n  Provider,\n} from '@angular/core';\n\nimport { AngularRouterTracking } from './angular-router';\nimport { Angulartics2Settings } from './angulartics2-config';\nimport { Angulartics2 } from './angulartics2-core';\nimport { ANGULARTICS2_TOKEN } from './angulartics2-token';\nimport { Angulartics2On, Angulartics2OnModule } from './angulartics2On';\nimport { RouterlessTracking } from './routerless';\n\n\n@NgModule({\n  imports: [Angulartics2OnModule],\n  exports: [Angulartics2On],\n})\nexport class Angulartics2Module {\n  static forRoot(\n    providers: Provider[],\n    settings: Partial<Angulartics2Settings> = {},\n  ): ModuleWithProviders {\n    return {\n      ngModule: Angulartics2Module,\n      providers: [\n        { provide: ANGULARTICS2_TOKEN, useValue: { providers, settings } },\n        Angulartics2,\n        { provide: RouterlessTracking, useClass: AngularRouterTracking },\n        ...providers,\n      ],\n    };\n  }\n}\n",
    "import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Injectable,\n  Input,\n  NgModule,\n  Renderer2,\n} from '@angular/core';\nimport { Angulartics2 } from './angulartics2-core';\n\n@Injectable()\n@Directive({ selector: '[angulartics2On]' })\nexport class Angulartics2On implements AfterContentInit {\n  @Input('angulartics2On') angulartics2On: string;\n  @Input() angularticsAction: string;\n  @Input() angularticsCategory: string;\n  @Input() angularticsLabel: string;\n  @Input() angularticsValue: string;\n  @Input() angularticsProperties: any = {};\n\n  constructor(\n    private elRef: ElementRef,\n    private angulartics2: Angulartics2,\n    private renderer: Renderer2\n  ) { }\n\n  ngAfterContentInit() {\n    this.renderer.listen(\n      this.elRef.nativeElement,\n      this.angulartics2On || 'click',\n      (event: Event) => this.eventTrack(event),\n    );\n  }\n\n  eventTrack(event: Event) {\n    const action = this.angularticsAction; // || this.inferEventName();\n    const properties: any = {\n      ...this.angularticsProperties,\n      eventType: event.type,\n    };\n\n    if (this.angularticsCategory) {\n      properties.category = this.angularticsCategory;\n    }\n    if (this.angularticsLabel) {\n      properties.label = this.angularticsLabel;\n    }\n    if (this.angularticsValue) {\n      properties.value = this.angularticsValue;\n    }\n\n    this.angulartics2.eventTrack.next({\n      action,\n      properties,\n    });\n  }\n\n  /*private isCommand() {\n    return ['a:', 'button:', 'button:button', 'button:submit', 'input:button', 'input:submit'].indexOf(\n      getDOM().tagName(this.el).toLowerCase() + ':' + (getDOM().type(this.el) || '')) >= 0;\n  }\n\n  private inferEventName() {\n    if (this.isCommand()) return getDOM().getText(this.el) || getDOM().getValue(this.el);\n    return getDOM().getProperty(this.el, 'id') || getDOM().getProperty(this.el, 'name') || getDOM().tagName(this.el);\n  }*/\n}\n\n@NgModule({\n  declarations: [Angulartics2On],\n  exports: [Angulartics2On],\n})\nexport class Angulartics2OnModule {}\n",
    "import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { delay } from 'rxjs/operators/delay';\nimport { filter } from 'rxjs/operators/filter';\nimport { map } from 'rxjs/operators/map';\n\nimport { Observable } from 'rxjs/Observable';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n/**\n * Track Route changes for applications using Angular's\n * default router\n *\n * @link https://angular.io/api/router/Router\n */\n@Injectable()\nexport class AngularRouterTracking implements RouterlessTracking {\n  constructor(\n    private router: Router,\n    private location: Location,\n  ) {}\n\n  trackLocation(settings): Observable<TrackNavigationEnd> {\n    return this.router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      filter(() => !settings.developerMode),\n      map((e: NavigationEnd) => {\n        return { url: e.urlAfterRedirects };\n      }),\n      delay(0),\n    );\n  }\n\n  prepareExternalUrl(url: string): string {\n    return this.location.prepareExternalUrl(url);\n  }\n}\n",
    "import { Inject, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { MonoTypeOperatorFunction } from 'rxjs/interfaces';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { Angulartics2Settings, DefaultConfig } from './angulartics2-config';\nimport { EventTrack, PageTrack, UserTimings } from './angulartics2-interfaces';\nimport { Angulartics2Token, ANGULARTICS2_TOKEN } from './angulartics2-token';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n@Injectable()\nexport class Angulartics2 {\n  settings: Angulartics2Settings;\n\n  pageTrack = new ReplaySubject<Partial<PageTrack>>(10);\n  eventTrack = new ReplaySubject<Partial<EventTrack>>(10);\n  exceptionTrack = new ReplaySubject<any>(10);\n  setAlias = new ReplaySubject<string>(10);\n  setUsername = new ReplaySubject<{ userId: string | number } | string>(10);\n  setUserProperties = new ReplaySubject<any>(10);\n  setUserPropertiesOnce = new ReplaySubject<any>(10);\n  setSuperProperties = new ReplaySubject<any>(10);\n  setSuperPropertiesOnce = new ReplaySubject<any>(10);\n  userTimings = new ReplaySubject<UserTimings>(10);\n\n  constructor(\n    private tracker: RouterlessTracking,\n    @Inject(ANGULARTICS2_TOKEN) setup: Angulartics2Token,\n  ) {\n    const defaultConfig = new DefaultConfig();\n    this.settings = { ...defaultConfig, ...setup.settings };\n    this.settings.pageTracking = {\n      ...defaultConfig.pageTracking,\n      ...setup.settings.pageTracking,\n    };\n    this.tracker\n      .trackLocation(this.settings)\n      .subscribe((event: TrackNavigationEnd) =>\n        this.trackUrlChange(event.url),\n      );\n  }\n\n  /** @deprecated */\n  virtualPageviews(value: boolean) {\n    this.settings.pageTracking.autoTrackVirtualPages = value;\n  }\n  /** @deprecated */\n  excludeRoutes(routes: Array<string | RegExp>) {\n    this.settings.pageTracking.excludedRoutes = routes;\n  }\n  /** @deprecated */\n  withBase(value: string) {\n    this.settings.pageTracking.basePath = value;\n  }\n  /** @deprecated */\n  clearIds(value: boolean) {\n    this.settings.pageTracking.clearIds = value;\n  }\n  /** @deprecated */\n  developerMode(value: boolean) {\n    this.settings.developerMode = value;\n  }\n\n  /** filters all events when developer mode is true */\n  filterDeveloperMode<T>(): MonoTypeOperatorFunction<T> {\n    return filter((value, index) => !this.settings.developerMode);\n  }\n\n  protected trackUrlChange(url: string) {\n    if (this.settings.pageTracking.autoTrackVirtualPages && !this.matchesExcludedRoute(url)) {\n      const clearedUrl = this.clearUrl(url);\n      let path: string;\n      if (this.settings.pageTracking.basePath.length) {\n        path = this.settings.pageTracking.basePath + clearedUrl;\n      } else {\n        path = this.tracker.prepareExternalUrl(clearedUrl);\n      }\n      this.pageTrack.next({ path });\n    }\n  }\n\n  /**\n   * Use string literals or regular expressions to exclude routes\n   * from automatic pageview tracking.\n   *\n   * @param url location\n   */\n  protected matchesExcludedRoute(url: string): boolean {\n    for (const excludedRoute of this.settings.pageTracking.excludedRoutes) {\n      const matchesRegex = excludedRoute instanceof RegExp && excludedRoute.test(url);\n      if (matchesRegex || url.indexOf(<string>excludedRoute) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Removes id's from tracked route.\n   *  EX: `/project/12981/feature` becomes `/project/feature`\n   *\n   * @param url current page path\n   */\n  protected clearUrl(url: string): string {\n    if (this.settings.pageTracking.clearIds || this.settings.pageTracking.clearQueryParams ||\n      this.settings.pageTracking.clearHash) {\n      return url\n        .split('/')\n        .map(part => this.settings.pageTracking.clearQueryParams ? part.split('?')[0] : part)\n        .map(part => this.settings.pageTracking.clearHash ? part.split('#')[0] : part)\n        .filter(part => !this.settings.pageTracking.clearIds || !part.match(this.settings.pageTracking.idsRegExp))\n        .join('/');\n    }\n    return url;\n  }\n}\n",
    "import { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Angulartics2Settings } from './angulartics2-config';\n\nexport interface TrackNavigationEnd {\n  url: string;\n}\n\nexport class RouterlessTracking {\n  trackLocation(settings: Angulartics2Settings): Observable<TrackNavigationEnd> {\n    return new BehaviorSubject<TrackNavigationEnd>({ url: '/' });\n  }\n  prepareExternalUrl(url: string): string {\n    return url;\n  }\n}\n",
    "import { InjectionToken, Provider } from '@angular/core';\n\nimport { Angulartics2Settings } from './angulartics2-config';\n\nexport interface Angulartics2Token {\n  providers: Provider[];\n  settings: Partial<Angulartics2Settings>;\n}\n\nexport const ANGULARTICS2_TOKEN = new InjectionToken<Angulartics2Token>('ANGULARTICS2');\n",
    "export interface GoogleAnalyticsSettings {\n  /** array of additional account names (only works for analyticsjs) */\n  additionalAccountNames: string[];\n  userId: any;\n  /** see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport */\n  transport: string;\n  anonymizeIp: boolean;\n}\n\nexport interface AppInsightsSettings {\n  userId: string;\n}\n\nexport interface GoogleTagManagerSettings {\n  userId: any;\n}\n\nexport interface PageTrackingSettings {\n  autoTrackVirtualPages: boolean;\n  basePath: string;\n  excludedRoutes: (string | RegExp)[];\n  /** drop ids from url `/sections/123/pages/456` -> `/sections/pages` */\n  clearIds: boolean;\n  /** drop contents of url after hash marker `/callback#authcode=1234` -> `/callback` */\n  clearHash: boolean;\n  /** drop query params from url `/sections/123/pages?param=456&param2=789` -> `/sections/123/pages` */\n  clearQueryParams: boolean;\n  /** used with clearIds, define the matcher to clear url parts */\n  idsRegExp: RegExp;\n}\n\nexport interface Angulartics2Settings {\n  pageTracking: Partial<PageTrackingSettings>;\n  /** Disable page tracking */\n  developerMode: boolean;\n  ga: Partial<GoogleAnalyticsSettings>;\n  appInsights: Partial<AppInsightsSettings>;\n  gtm: Partial<GoogleTagManagerSettings>;\n}\n\nexport class DefaultConfig implements Angulartics2Settings {\n  pageTracking = {\n    autoTrackVirtualPages: true,\n    basePath: '',\n    excludedRoutes: [],\n    clearIds: false,\n    clearHash: false,\n    clearQueryParams: false,\n    idsRegExp: /^\\d+$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/,\n  };\n  developerMode = false;\n  ga = {};\n  appInsights = {};\n  gtm = {};\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
