{
  "version": 3,
  "file": "angulartics2-appinsights.umd.js",
  "sources": [
    "ng://angulartics2/appinsights/src/lib/providers/appinsights/appinsights.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { Angulartics2, AppInsightsSettings } from 'angulartics2';\n\ndeclare const appInsights: Microsoft.ApplicationInsights.IAppInsights;\n\nexport class AppInsightsDefaults implements AppInsightsSettings {\n  userId = null;\n}\n\n@Injectable()\nexport class Angulartics2AppInsights {\n  loadStartTime: number = null;\n  loadTime: number = null;\n\n  metrics: { [name: string]: number } = null;\n  dimensions: { [name: string]: string } = null;\n  measurements: { [name: string]: number } = null;\n\n  constructor(\n    private angulartics2: Angulartics2,\n    private title: Title,\n    private router: Router,\n  ) {\n    if (typeof appInsights === 'undefined') {\n      console.warn('appInsights not found');\n    }\n\n    const defaults = new AppInsightsDefaults;\n    // Set the default settings for this module\n    this.angulartics2.settings.appInsights = { ...defaults, ...this.angulartics2.settings.appInsights };\n\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.exceptionTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.exceptionTrack(x));\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.router.events\n      .pipe(\n        this.angulartics2.filterDeveloperMode(),\n        filter(event => event instanceof NavigationStart),\n      )\n      .subscribe(event => this.startTimer());\n\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationError || event instanceof NavigationEnd))\n      .subscribe(error => this.stopTimer());\n  }\n\n  startTimer() {\n    this.loadStartTime = Date.now();\n    this.loadTime = null;\n  }\n\n  stopTimer() {\n    this.loadTime = Date.now() - this.loadStartTime;\n    this.loadStartTime = null;\n  }\n\n  /**\n   * Page Track in Baidu Analytics\n   *\n   * @param path - Location 'path'\n   *\n   * @link https://github.com/Microsoft/ApplicationInsights-JS/blob/master/API-reference.md#trackpageview\n   */\n  pageTrack(path: string) {\n    appInsights.trackPageView(\n      this.title.getTitle(),\n      path,\n      this.dimensions,\n      this.metrics,\n      this.loadTime,\n    );\n  }\n\n  /**\n   * Log a user action or other occurrence.\n   *\n   * @param name Name to identify this event in the portal.\n   * @param properties Additional data used to filter events and metrics in the portal. Defaults to empty.\n   *\n   * @link https://github.com/Microsoft/ApplicationInsights-JS/blob/master/API-reference.md#trackevent\n   */\n  eventTrack(name: string, properties: { [name: string]: string }) {\n    appInsights.trackEvent(name, properties, this.measurements);\n  }\n\n  /**\n   * Exception Track Event in GA\n   *\n   * @param properties - Comprised of the mandatory fields 'appId' (string), 'appName' (string) and 'appVersion' (string) and\n   * optional fields 'fatal' (boolean) and 'description' (string), error\n   *\n   * @link https://github.com/Microsoft/ApplicationInsights-JS/blob/master/API-reference.md#trackexception\n   */\n  exceptionTrack(properties: any) {\n    const description = properties.event || properties.description || properties;\n\n    appInsights.trackException(description);\n  }\n\n  /**\n   *\n   * @param userId\n   *\n   * @link https://github.com/Microsoft/ApplicationInsights-JS/blob/master/API-reference.md#setauthenticatedusercontext\n   */\n  setUsername(userId: string) {\n    this.angulartics2.settings.appInsights.userId = userId;\n    appInsights.setAuthenticatedUserContext(userId);\n  }\n\n  setUserProperties(properties: Partial<{ userId: string, accountId: string }>) {\n    if (properties.userId) {\n      this.angulartics2.settings.appInsights.userId = properties.userId;\n    }\n    if (properties.accountId) {\n      appInsights.setAuthenticatedUserContext(\n        this.angulartics2.settings.appInsights.userId,\n        properties.accountId,\n      );\n    } else {\n      appInsights.setAuthenticatedUserContext(\n        this.angulartics2.settings.appInsights.userId,\n      );\n    }\n  }\n}\n"
  ],
  "names": [
    "Injectable",
    "filter",
    "NavigationStart",
    "router",
    "angulartics2"
  ],
  "mappings": "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"
}
