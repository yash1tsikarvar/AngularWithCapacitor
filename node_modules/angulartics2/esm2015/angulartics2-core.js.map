{
  "version": 3,
  "file": "angulartics2-core.js",
  "sources": [
    "ng://angulartics2/src/lib/core/angulartics2-core.ts"
  ],
  "sourcesContent": [
    "import { Inject, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { MonoTypeOperatorFunction } from 'rxjs/interfaces';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { Angulartics2Settings, DefaultConfig } from './angulartics2-config';\nimport { EventTrack, PageTrack, UserTimings } from './angulartics2-interfaces';\nimport { Angulartics2Token, ANGULARTICS2_TOKEN } from './angulartics2-token';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n@Injectable()\nexport class Angulartics2 {\n  settings: Angulartics2Settings;\n\n  pageTrack = new ReplaySubject<Partial<PageTrack>>(10);\n  eventTrack = new ReplaySubject<Partial<EventTrack>>(10);\n  exceptionTrack = new ReplaySubject<any>(10);\n  setAlias = new ReplaySubject<string>(10);\n  setUsername = new ReplaySubject<{ userId: string | number } | string>(10);\n  setUserProperties = new ReplaySubject<any>(10);\n  setUserPropertiesOnce = new ReplaySubject<any>(10);\n  setSuperProperties = new ReplaySubject<any>(10);\n  setSuperPropertiesOnce = new ReplaySubject<any>(10);\n  userTimings = new ReplaySubject<UserTimings>(10);\n\n  constructor(\n    private tracker: RouterlessTracking,\n    @Inject(ANGULARTICS2_TOKEN) setup: Angulartics2Token,\n  ) {\n    const defaultConfig = new DefaultConfig();\n    this.settings = { ...defaultConfig, ...setup.settings };\n    this.settings.pageTracking = {\n      ...defaultConfig.pageTracking,\n      ...setup.settings.pageTracking,\n    };\n    this.tracker\n      .trackLocation(this.settings)\n      .subscribe((event: TrackNavigationEnd) =>\n        this.trackUrlChange(event.url),\n      );\n  }\n\n  /** @deprecated */\n  virtualPageviews(value: boolean) {\n    this.settings.pageTracking.autoTrackVirtualPages = value;\n  }\n  /** @deprecated */\n  excludeRoutes(routes: Array<string | RegExp>) {\n    this.settings.pageTracking.excludedRoutes = routes;\n  }\n  /** @deprecated */\n  withBase(value: string) {\n    this.settings.pageTracking.basePath = value;\n  }\n  /** @deprecated */\n  clearIds(value: boolean) {\n    this.settings.pageTracking.clearIds = value;\n  }\n  /** @deprecated */\n  developerMode(value: boolean) {\n    this.settings.developerMode = value;\n  }\n\n  /** filters all events when developer mode is true */\n  filterDeveloperMode<T>(): MonoTypeOperatorFunction<T> {\n    return filter((value, index) => !this.settings.developerMode);\n  }\n\n  protected trackUrlChange(url: string) {\n    if (this.settings.pageTracking.autoTrackVirtualPages && !this.matchesExcludedRoute(url)) {\n      const clearedUrl = this.clearUrl(url);\n      let path: string;\n      if (this.settings.pageTracking.basePath.length) {\n        path = this.settings.pageTracking.basePath + clearedUrl;\n      } else {\n        path = this.tracker.prepareExternalUrl(clearedUrl);\n      }\n      this.pageTrack.next({ path });\n    }\n  }\n\n  /**\n   * Use string literals or regular expressions to exclude routes\n   * from automatic pageview tracking.\n   *\n   * @param url location\n   */\n  protected matchesExcludedRoute(url: string): boolean {\n    for (const excludedRoute of this.settings.pageTracking.excludedRoutes) {\n      const matchesRegex = excludedRoute instanceof RegExp && excludedRoute.test(url);\n      if (matchesRegex || url.indexOf(<string>excludedRoute) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Removes id's from tracked route.\n   *  EX: `/project/12981/feature` becomes `/project/feature`\n   *\n   * @param url current page path\n   */\n  protected clearUrl(url: string): string {\n    if (this.settings.pageTracking.clearIds || this.settings.pageTracking.clearQueryParams ||\n      this.settings.pageTracking.clearHash) {\n      return url\n        .split('/')\n        .map(part => this.settings.pageTracking.clearQueryParams ? part.split('?')[0] : part)\n        .map(part => this.settings.pageTracking.clearHash ? part.split('#')[0] : part)\n        .filter(part => !this.settings.pageTracking.clearIds || !part.match(this.settings.pageTracking.idsRegExp))\n        .join('/');\n    }\n    return url;\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
