{
  "version": 3,
  "file": "angulartics2-clicky.umd.min.js",
  "sources": [
    "ng://angulartics2/clicky/src/lib/providers/clicky/clicky.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { Angulartics2 } from 'angulartics2';\nimport { ClickyProperties } from './clicky.interfaces';\n\ndeclare var clicky: any;\n\n@Injectable()\nexport class Angulartics2Clicky {\n  constructor(\n    private angulartics2: Angulartics2,\n    private titleService: Title,\n  ) {\n    if (typeof clicky === 'undefined') {\n      console.warn('Angulartics 2 Clicky Plugin: clicky global not found');\n    }\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventOrGoalTrack(x.action, x.properties));\n  }\n\n  /**\n   * Track Page in Clicky\n   *\n   * @param path location\n   *\n   * @link https://clicky.com/help/custom/manual#log\n   */\n  pageTrack(path: string) {\n    const title: string = this.titleService.getTitle();\n    clicky.log(path, title, 'pageview');\n  }\n\n  /**\n   * Track Event Or Goal in Clicky\n   *\n   * @param action Action name\n   * @param properties Definition of 'properties.goal' determines goal vs event tracking\n   *\n   * @link https://clicky.com/help/custom/manual#log\n   * @link https://clicky.com/help/custom/manual#goal\n   */\n  eventOrGoalTrack(action: string, properties: Partial<ClickyProperties>) {\n    if (typeof properties.goal === 'undefined') {\n      const title: string = properties.title || null;\n      const type: string = properties.type != null ? this.validateType(properties.type) : null;\n      clicky.log(action, title, type);\n    } else {\n      const goalId: string = properties.goal;\n      const revenue: number = properties.revenue;\n      clicky.goal(goalId, revenue, !!properties.noQueue);\n    }\n  }\n\n  private validateType(type: string): string {\n    const EventType = ['pageview', 'click', 'download', 'outbound'];\n    return EventType.indexOf(type) > -1 ? type : 'pageview';\n  }\n}\n"
  ],
  "names": [
    "Angulartics2Clicky",
    "angulartics2",
    "titleService",
    "_this",
    "this",
    "clicky",
    "console",
    "warn",
    "pageTrack",
    "pipe",
    "filterDeveloperMode",
    "subscribe",
    "x",
    "path",
    "eventTrack",
    "eventOrGoalTrack",
    "action",
    "properties",
    "prototype",
    "title",
    "getTitle",
    "log",
    "goal",
    "type",
    "validateType",
    "goalId",
    "revenue",
    "noQueue"
  ],
  "mappings": "qcAAA,IASAA,EAAA,WACE,SAAAA,EAAFC,EAAAC,GACY,IAAZC,EAAAC,KACYA,KAAZH,aAAYA,EAERG,KAAJF,aAAAA,EACA,oBAAaG,QACbC,QAAAC,KAAA,wDAEAH,KAAOH,aAAPO,UACOC,KAAPL,KAAiBH,aAAjBS,uBACSC,UAAT,SAAAC,GAAA,OAAAT,EAAAK,UAAAI,EAAAC,QACAT,KAAOH,aAAPa,WACOL,KAAPL,KAAiBH,aAAjBS,uBACAC,UAAA,SAAAC,GAAA,OAAAT,EAAAY,iBAAAH,EAAAI,OAAAJ,EAAAK,qBAUAjB,EAAAkB,UAAAV,UAAA,SAAAK,GACI,IAAJM,EAAAf,KAAsCF,aAAtCkB,WACAf,OAAAgB,IAAAR,EAAAM,EAAA,aAYAnB,EAAAkB,UAAAH,iBAAgD,SAAhDC,EAAAC,GACA,GAAA,oBAAAA,EAAAK,KAAA,CACM,IAANH,EAAAF,EAAqCE,OAAS,KAC9CI,EAAA,MAAAN,EAAAM,KAAAnB,KAAAoB,aAAAP,EAAAM,MAAA,KACAlB,OAAAgB,IAAAL,EAAAG,EAAAI,OACA,CACM,IAANE,EAAmBR,EAAnBK,KACAI,EAAqCT,EAAWS,QAChDrB,OAAAiB,KAAAG,EAAAC,IAAAT,EAAAU,WAIA3B,EAAAkB,UAAAM,aAAA,SAAAD,YACqC,CAAC,WAAtC,QAA2D,WAA3D,uCAnDA"
}
