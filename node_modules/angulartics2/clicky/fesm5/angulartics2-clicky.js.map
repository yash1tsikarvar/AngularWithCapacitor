{
  "version": 3,
  "file": "angulartics2-clicky.js",
  "sources": [
    "ng://angulartics2/clicky/src/lib/providers/clicky/clicky.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { Angulartics2 } from 'angulartics2';\nimport { ClickyProperties } from './clicky.interfaces';\n\ndeclare var clicky: any;\n\n@Injectable()\nexport class Angulartics2Clicky {\n  constructor(\n    private angulartics2: Angulartics2,\n    private titleService: Title,\n  ) {\n    if (typeof clicky === 'undefined') {\n      console.warn('Angulartics 2 Clicky Plugin: clicky global not found');\n    }\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventOrGoalTrack(x.action, x.properties));\n  }\n\n  /**\n   * Track Page in Clicky\n   *\n   * @param path location\n   *\n   * @link https://clicky.com/help/custom/manual#log\n   */\n  pageTrack(path: string) {\n    const title: string = this.titleService.getTitle();\n    clicky.log(path, title, 'pageview');\n  }\n\n  /**\n   * Track Event Or Goal in Clicky\n   *\n   * @param action Action name\n   * @param properties Definition of 'properties.goal' determines goal vs event tracking\n   *\n   * @link https://clicky.com/help/custom/manual#log\n   * @link https://clicky.com/help/custom/manual#goal\n   */\n  eventOrGoalTrack(action: string, properties: Partial<ClickyProperties>) {\n    if (typeof properties.goal === 'undefined') {\n      const title: string = properties.title || null;\n      const type: string = properties.type != null ? this.validateType(properties.type) : null;\n      clicky.log(action, title, type);\n    } else {\n      const goalId: string = properties.goal;\n      const revenue: number = properties.revenue;\n      clicky.goal(goalId, revenue, !!properties.noQueue);\n    }\n  }\n\n  private validateType(type: string): string {\n    const EventType = ['pageview', 'click', 'download', 'outbound'];\n    return EventType.indexOf(type) > -1 ? type : 'pageview';\n  }\n}\n"
  ],
  "names": [],
  "mappings": ";;;;;;;;AAAA,AASA,IAAA,kBAAA,kBAAA,YAAA;;;;;IACE,SAAF,kBAAA,CAAA,YAAA,EAAA,YAAA,EAAA;QACY,IAAZ,KAAA,GAAA,IAAA,CAAwB;QACZ,IAAZ,CAAA,YAAwB,GAAZ,YAAY,CAAxB;QAEI,IAAI,CAAR,YAAqB,GAArB,YAAA,CAAqC;QACrC,IAAM,OAAO,MAAM,KAAnB,WAAA,EAAA;YACA,OAAA,CAAA,IAAA,CAAA,sDAAA,CAAA,CAAA;SACA;QACA,IAAA,CAAO,YAAP,CAAA,SAA6B;aACtB,IAAP,CAAA,IAAgB,CAAC,YAAY,CAA7B,mBAAA,EAAA,CAAA;aACS,SAAT,CAAA,UAAA,CAAA,EAAgC,EAAhC,OAAA,KAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA;QACA,IAAA,CAAO,YAAP,CAAA,UAA8B;aACvB,IAAP,CAAA,IAAgB,CAAC,YAAY,CAA7B,mBAAA,EAAA,CAAA;aACA,SAAA,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;;;;;;;;;IAUA,kBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAA,IAAA,EAAA;QACI,qBAAJ,KAAA,GAAA,IAAA,CAAsC,YAAtC,CAAA,QAAA,EAAA,CAAA;QACA,MAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,EAAA,UAAA,CAAA,CAAA;;;;;;;;;;;;IAYA,kBAAA,CAAA,SAAA,CAAA,gBAAA,GAAgD,UAAhD,MAAA,EAAA,UAAA,EAAA;QACA,IAAM,OAAN,UAAA,CAAA,IAAA,KAAA,WAAA,EAAA;YACM,qBAAN,KAAA,GAAA,UAAA,CAAqC,KAAK,IAAI,IAAI,CAAC;YAC7C,qBAAN,IAAA,GAAA,UAAA,CAAA,IAAA,IAAA,IAAA,GAAA,IAAA,CAAA,YAAA,CAAA,UAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA;YACA,MAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,EAAA,IAAA,CAAA,CAAA;SAAA;aACA;YACM,qBAAN,MAAA,GAAmB,UAAnB,CAAA,IAAA,CAAA;YACM,qBAAN,OAAA,GAAqC,UAAU,CAAC,OAAO,CAAC;YACxD,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA,OAAA,EAAA,CAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA;SACA;;;;;;IAGA,kBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAA,IAAA,EAAA;QACI,qBAAJ,SAAkC,GAAG,CAAC,UAAU,EAAhD,OAAA,EAA2D,UAA3D,EAAA,UAAA,CAAA,CAAA;;;;CApDA,EAAA,CAAA,CAAA;;;CALA,CAAA;;;;;;;;;;;;;;"
}
