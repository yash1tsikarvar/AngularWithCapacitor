{
  "version": 3,
  "file": "angulartics2-intercom.umd.min.js",
  "sources": [
    "ng://angulartics2/intercom/src/lib/providers/intercom/intercom.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var Intercom: any;\n\n@Injectable()\nexport class Angulartics2Intercom {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      Intercom('trackEvent', action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      if (properties.userId && !properties.user_id) {\n        properties.user_id = properties.userId;\n      }\n\n      Intercom('boot', properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"
  ],
  "names": [
    "Angulartics2Intercom",
    "angulartics2",
    "_this",
    "this",
    "pageTrack",
    "pipe",
    "filterDeveloperMode",
    "subscribe",
    "x",
    "path",
    "eventTrack",
    "action",
    "properties",
    "setUserProperties",
    "setUserPropertiesOnce",
    "prototype",
    "url",
    "e",
    "ReferenceError",
    "Intercom",
    "userId",
    "user_id"
  ],
  "mappings": "iXAAA,IAOAA,EAAA,WAEE,SAAAA,EAAFC,GACY,IAAZC,EAAAC,KAEIA,KAAKF,aAATA,EACAE,KAAOF,aAAPG,UACOC,KAAPF,KAAiBF,aAAjBK,uBACSC,UAAT,SAAAC,GAAA,OAAAN,EAAAE,UAAAI,EAAAC,QACAN,KAAOF,aAAPS,WACOL,KAAPF,KAAiBF,aAAjBK,uBACSC,UAAT,SAAAC,GAAA,OAAAN,EAAAQ,WAAAF,EAAAG,OAAAH,EAAAI,cACAT,KAAOF,aAAPY,kBACSN,UAAT,SAAAC,GAAA,OAAAN,EAAAW,kBAAAL,KACAL,KAAOF,aAAPa,sBACAP,UAAA,SAAAC,GAAA,OAAAN,EAAAW,kBAAAL,YAGAR,EAAAe,UAAAX,UAAA,SAAAK,GACA,IACAN,KAAAO,WAAA,WAAA,CACAM,IAAAP,IAEA,MAASQ,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAKAjB,EAAAe,UAAAL,WAAA,SAAAC,EAAAC,GACA,IACAO,SAAA,aAAAR,EAAAC,GACA,MAASK,GACT,KAAAA,aAAAC,gBACA,MAAAD,IAKAjB,EAAAe,UAAAF,kBAAA,SAAAD,GACA,IACQA,EAAWQ,SAAnBR,EAAAS,UACAT,EAAAS,QAAAT,EAAAQ,QAGAD,SAAA,OAAAP,GACA,MAASK,GACT,KAAAA,aAAAC,gBACA,MAAAD,MAjDA"
}
