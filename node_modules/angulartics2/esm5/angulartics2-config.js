/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @record
 */
export function GoogleAnalyticsSettings() { }
function GoogleAnalyticsSettings_tsickle_Closure_declarations() {
    /**
     * array of additional account names (only works for analyticsjs)
     * @type {?}
     */
    GoogleAnalyticsSettings.prototype.additionalAccountNames;
    /** @type {?} */
    GoogleAnalyticsSettings.prototype.userId;
    /**
     * see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport
     * @type {?}
     */
    GoogleAnalyticsSettings.prototype.transport;
    /** @type {?} */
    GoogleAnalyticsSettings.prototype.anonymizeIp;
}
/**
 * @record
 */
export function AppInsightsSettings() { }
function AppInsightsSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    AppInsightsSettings.prototype.userId;
}
/**
 * @record
 */
export function GoogleTagManagerSettings() { }
function GoogleTagManagerSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    GoogleTagManagerSettings.prototype.userId;
}
/**
 * @record
 */
export function PageTrackingSettings() { }
function PageTrackingSettings_tsickle_Closure_declarations() {
    /** @type {?} */
    PageTrackingSettings.prototype.autoTrackVirtualPages;
    /** @type {?} */
    PageTrackingSettings.prototype.basePath;
    /** @type {?} */
    PageTrackingSettings.prototype.excludedRoutes;
    /**
     * drop ids from url `/sections/123/pages/456` -> `/sections/pages`
     * @type {?}
     */
    PageTrackingSettings.prototype.clearIds;
    /**
     * drop contents of url after hash marker `/callback#authcode=1234` -> `/callback`
     * @type {?}
     */
    PageTrackingSettings.prototype.clearHash;
    /**
     * drop query params from url `/sections/123/pages?param=456&param2=789` -> `/sections/123/pages`
     * @type {?}
     */
    PageTrackingSettings.prototype.clearQueryParams;
    /**
     * used with clearIds, define the matcher to clear url parts
     * @type {?}
     */
    PageTrackingSettings.prototype.idsRegExp;
}
/**
 * @record
 */
export function Angulartics2Settings() { }
function Angulartics2Settings_tsickle_Closure_declarations() {
    /** @type {?} */
    Angulartics2Settings.prototype.pageTracking;
    /**
     * Disable page tracking
     * @type {?}
     */
    Angulartics2Settings.prototype.developerMode;
    /** @type {?} */
    Angulartics2Settings.prototype.ga;
    /** @type {?} */
    Angulartics2Settings.prototype.appInsights;
    /** @type {?} */
    Angulartics2Settings.prototype.gtm;
}
var DefaultConfig = /** @class */ (function () {
    function DefaultConfig() {
        this.pageTracking = {
            autoTrackVirtualPages: true,
            basePath: '',
            excludedRoutes: [],
            clearIds: false,
            clearHash: false,
            clearQueryParams: false,
            idsRegExp: /^\d+$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/,
        };
        this.developerMode = false;
        this.ga = {};
        this.appInsights = {};
        this.gtm = {};
    }
    return DefaultConfig;
}());
export { DefaultConfig };
function DefaultConfig_tsickle_Closure_declarations() {
    /** @type {?} */
    DefaultConfig.prototype.pageTracking;
    /** @type {?} */
    DefaultConfig.prototype.developerMode;
    /** @type {?} */
    DefaultConfig.prototype.ga;
    /** @type {?} */
    DefaultConfig.prototype.appInsights;
    /** @type {?} */
    DefaultConfig.prototype.gtm;
}
//# sourceMappingURL=angulartics2-config.js.map
